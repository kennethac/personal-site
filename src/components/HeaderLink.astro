---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + (subpath?.[0] || '');
---

<span class="header-link-container">
<a
	href={href}
	class:list={[className, { active: isActive }]}
	{...props}>
	<slot />
</a>
{isActive && <span class="underline"></span>}
</span>

<style>
	.header-link-container {
		position: relative;
		display: inline-block;
	}
	a {
		display: inline-block;
		text-decoration: none;
		font-family: 'Inter Variable', sans-serif;
	}
	a.active {
		font-weight: bolder;
		padding-bottom: 0;
		margin-bottom: 0;
	}
	.underline {
		background-color: var(--accent);
		height: 2px;
		width: 100%;
		display: block;
		view-transition-name: header-link-underline;
	}
</style>
