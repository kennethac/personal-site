---
import type {CollectionEntry} from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';
import BasicLayout from "./BasicLayout.astro";
import {getArticleLengthInfo} from "../util/readingTime";

type Props = {
    post: CollectionEntry<'blog'>
}

const {post: {id, body, data: {title, description, pubDate, updatedDate}}} = Astro.props;
const viewTransitionName = `view-transition-name: ${id};`;
const words = getArticleLengthInfo(body);
---

<BasicLayout title={title} description={description}>
    <article>
        <div class="prose centered">
            <div class="title">
                <div class="date">
                    <FormattedDate date={pubDate}/>
                    {
                        updatedDate && (
                                    <div class="last-updated-on">
                                        Last updated on
                                        <FormattedDate date={updatedDate}/>
                                    </div>
                        )
                    }
                </div>
                <h1 style={viewTransitionName}>{title}</h1>
                <p class="description">{description}</p>
                {/* <p>{words.words} words - {words.minutesEstimate} minute read</p> */}
                <hr/>
            </div>
            <slot/>
        </div>
    </article>
</BasicLayout>

<style>
    .description {
        font-size: var(--step-1);
        color: rgb(var(--gray));
        font-style: italic;
    }
</style>
